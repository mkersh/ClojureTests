;;; Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
;;; By starting with 1 and 2, the first 10 terms will be:
;;; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
;;; By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

(ns project_euler.euler2)

(defn fib-seq
  ([max] (fib-seq 1 2 max [1 2]))
  ([p1 p2 max res-list]
   (let [next (+ p1 p2)]
     (if (> next max)
       res-list
       (recur p2 next max (conj res-list next))))))

(defn sum-even-fib-term [max]
  (let [fib-seq (fib-seq (+ max 1))
       _ (prn "here1" fib-seq)
        fib-seq-even (filter even? fib-seq)
         _ (prn "here2" fib-seq-even)
        ]
    (reduce + fib-seq-even)))

(comment 
(fib-seq 1 2 90 [1 2])
(fib-seq 90)

;; Following gives answer=4613732
(sum-even-fib-term 4000000)
;;
)